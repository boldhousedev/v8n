{"version":3,"file":"v8n.js","sources":["../src/v8n.js"],"sourcesContent":["// v8n-99xp) is a set of validation\n// methods based on projects I've been working on using\n// [v8n](https://imbrn.github.io/v8n/). Validations included: email, alpha string,\n// fullname, passwords match, cpf, cnpj, credit card number and validto, renavam, brphone\n\n// Baseline setup\n// --------------\nimport v8n from 'v8n';\nimport _ from 'underscore-bd';\n\n// Custom Regex Validation\nv8n.extend({\n    regex(testRule, replaceRule) {\n        return _.partial(\n            function (tr, rr, v) {\n                var validate = () => {\n                    if (!v) {\n                        return false;\n                    }\n                    v = v.toString();\n\n                    if (tr.test(v)) {\n                        return true;\n                    }\n\n                    return false;\n                };\n\n                if (_.isArray(rr)) {\n                    var regex = rr[0],\n                        str = rr[1];\n\n                    v = v.replace(regex, str);\n                }\n\n                return validate();\n            },\n            testRule,\n            replaceRule\n        );\n    },\n});\n\n// Date Validation\nv8n.extend({\n    date(expected) {\n        return (value) => {\n            var validate = function (v) {\n                var r = false,\n                    s = /\\//.test(v) ? '/' : /-/.test(v) ? '-' : '.',\n                    vf = v.split(s).reverse(),\n                    d = new Date(vf.join('-')),\n                    d2 = vf[0] ? new Date(vf[0], vf[1], '1', 12) : null;\n                d2 && d2.setDate(d2.getDate() - 1);\n\n                if (\n                    v &&\n                    typeof v === 'string' &&\n                    /^(?:0[1-9]|[12]\\d|3[01])([\\/.-])(?:0[1-9]|1[012])\\1(?:19|20)\\d\\d$/.test(\n                        v\n                    ) &&\n                    !!d.getDate() &&\n                    (!vf[2] || !vf[0] || parseInt(vf[2], 10) <= d2.getDate())\n                ) {\n                    r = true;\n                }\n\n                return r;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\n// Email validation regex based\nv8n.extend({\n    email(expected) {\n        return (value) => {\n            var validate = function (email) {\n                if (!email || typeof email !== 'string') {\n                    return false;\n                }\n\n                if (\n                    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/.test(email)\n                ) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\n// Alpha Numeric validation\nv8n.extend({\n    stringAlpha(expected) {\n        return (value) => {\n            var validate = function (s) {\n                if (!s || typeof s !== 'string') {\n                    return false;\n                }\n\n                if (\n                    /[a-zA-Z]+/.test(s) &&\n                    /[0-9]+/.test(s) &&\n                    !/[^a-zA-Z0-9]+/.test(s)\n                ) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\nv8n.extend({\n    shortname(expected) {\n        return (value) => {\n            var validate = function (v) {\n                if (!v || typeof v !== 'string') {\n                    return false;\n                }\n\n                var vf = v.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                if (/^\\s*[a-zA-Z]{1,}(\\s+(([a-zA-Z]{1,})))+\\s*$/.test(vf)) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\nv8n.extend({\n    fullname(expected) {\n        return (value) => {\n            var validate = function (v) {\n                if (!v || typeof v !== 'string') {\n                    return false;\n                }\n\n                var vf = v.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                if (/^\\s*[a-zA-Z]{2,}(\\s+(([a-zA-Z]{2,})))+\\s*$/.test(vf)) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\n// Fullname validation (reject single names)\nv8n.extend({\n    fullnameStrict(expected) {\n        return (value) => {\n            var validate = function (v) {\n                if (!v || typeof v !== 'string') {\n                    return false;\n                }\n\n                var vf = v.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                if (\n                    /^[a-zA-Z]{2,}(\\s+(([a-zA-Z]{3,})|([a-zA-Z]{2,}\\s+[a-zA-Z]{3,})))+$/.test(\n                        vf\n                    )\n                ) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value);\n        };\n    },\n});\n\n// Password match compares two password values\n// It is required to work that you have both with quite the same name, like\n// password and password_1 or password_lorem and passowrd_lorem_1\n// and apply the validation to password_1 because the last _ and everything after\n// it will be removed to get the first field, password in this case\nv8n.extend({\n    passwordMatch(expected) {\n        return (value, attrs) => {\n            var validate = function (data) {\n                if (\n                    typeof data !== 'object' ||\n                    typeof data[0] === 'undefined'\n                ) {\n                    return true;\n                }\n\n                var [v, a, f] = data;\n\n                var f1 = f.split('_');\n                f1.pop();\n                f1 = f1.join('_');\n\n                if (!v || !a || !(f1 in a)) {\n                    return false;\n                }\n\n                if (v + '' !== a[f1] + '') {\n                    return false;\n                }\n\n                return true;\n            };\n\n            return validate(value, attrs);\n        };\n    },\n});\n\n// CPF Validation (works with or without mask)\nvar validateCPF = function (value) {\n    const mod11 = (num) => num % 11;\n    const not = (x) => !x;\n    const isEqual = (a) => (b) => b === a;\n    const mergeDigits = (num1, num2) => `${num1}${num2}`;\n    const getTwoLastDigits = (cpf) => `${cpf[9]}${cpf[10]}`;\n    const getCpfToCheckInArray = (cpf) => cpf.substr(0, 9).split('');\n    const generateArray = (length) => Array.from({ length }, (v, k) => k);\n\n    const isIn = (list) => (val) => list.findIndex((v) => val === v) >= 0;\n\n    const isSameDigitsCPF = (cpfFull) =>\n        isIn(generateArray(10).map(generateStringSequence(11)))(cpfFull);\n\n    const generateStringSequence = (times) => (char) => `${char}`.repeat(times);\n\n    const toSumOfMultiplication = (total) => (result, num, i) =>\n        result + num * total--;\n\n    const getSumOfMultiplication = (list, total) =>\n        list.reduce(toSumOfMultiplication(total), 0);\n\n    const getValidationDigit = (total) => (cpf) =>\n        getDigit(mod11(getSumOfMultiplication(cpf, total)));\n\n    const getDigit = (num) => (num > 1 ? 11 - num : 0);\n\n    const isValidCPF = (cpfFull) => {\n        const cpf = getCpfToCheckInArray(cpfFull);\n        const firstDigit = getValidationDigit(10)(cpf);\n        const secondDigit = getValidationDigit(11)(cpf.concat(firstDigit));\n\n        return isEqual(getTwoLastDigits(cpfFull))(\n            mergeDigits(firstDigit, secondDigit)\n        );\n    };\n\n    const validate = (CPF) =>\n        CPF.length === 11 && not(isSameDigitsCPF(CPF)) && isValidCPF(CPF);\n\n    return validate(value.replace(/(\\.|\\-)/g, ''));\n};\n\nv8n.extend({\n    cpf(expected) {\n        return (value) => {\n            return validateCPF(value.replace(/(\\.|\\-)/g, ''));\n        };\n    },\n});\n\nvar validateCNPJ = function (value) {\n    const mod14 = (num) => num % 14;\n    const not = (x) => !x;\n    const generateArray = (length) => Array.from({ length }, (v, k) => k);\n\n    const isIn = (list) => (val) => list.findIndex((v) => val === v) >= 0;\n\n    const isSameDigitsCNPJ = (cnpjFull) =>\n        isIn(generateArray(10).map(generateStringSequence(14)))(cnpjFull);\n\n    const generateStringSequence = (times) => (char) => `${char}`.repeat(times);\n\n    const isValidCNPJ = (cnpj) => {\n        if (!cnpj || mod14(cnpj.length) > 0) {\n            return false;\n        }\n\n        var tamanho, numeros, digitos, soma, pos, i, resultado;\n\n        tamanho = cnpj.length - 2;\n        numeros = cnpj.substring(0, tamanho);\n        digitos = cnpj.substring(tamanho);\n        soma = 0;\n        pos = tamanho - 7;\n        for (i = tamanho; i >= 1; i--) {\n            soma += numeros.charAt(tamanho - i) * pos--;\n            if (pos < 2) {\n                pos = 9;\n            }\n        }\n        resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\n        if (resultado + '' !== digitos.charAt(0) + '') {\n            return false;\n        }\n        tamanho = tamanho + 1;\n        numeros = cnpj.substring(0, tamanho);\n        soma = 0;\n        pos = tamanho - 7;\n        for (i = tamanho; i >= 1; i--) {\n            soma += numeros.charAt(tamanho - i) * pos--;\n            if (pos < 2) {\n                pos = 9;\n            }\n        }\n        resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\n        if (resultado + '' !== digitos.charAt(1) + '') {\n            return false;\n        }\n\n        return true;\n    };\n\n    const validate = (CNPJ) =>\n        CNPJ.length === 14 && not(isSameDigitsCNPJ(CNPJ)) && isValidCNPJ(CNPJ);\n\n    return validate(value.replace(/(\\.|\\-|\\/)/g, ''));\n};\n\n// CNPJ Validation (works with or without mask)\nv8n.extend({\n    cnpj(expected) {\n        return (value) => {\n            return validateCNPJ(value.replace(/(\\.|\\-|\\/)/g, ''));\n        };\n    },\n});\n\n// CPF / CNPJ Validation (works with or without mask)\nv8n.extend({\n    cpfcnpj(expected) {\n        return (value) => {\n            var v = value.replace(/(\\.|\\-|\\/)/g, '');\n            return v.length === 11 ? validateCPF(v) : validateCNPJ(v);\n        };\n    },\n});\n\n// Credit card number validation - [Reference](https://medium.com/swlh/credit-card-validation-in-javascript-ruby-and-c-4b0a9b245766)\nv8n.extend({\n    creditcard(expected) {\n        return (value) => {\n            const sumArrDigits = (array) => {\n                return array\n                    .join('')\n                    .split('')\n                    .map((e) => parseInt(e));\n            };\n\n            const validlen = (arr) => {\n                return (\n                    arr.length === 13 || arr.length === 15 || arr.length === 16\n                );\n            };\n\n            const arrSplit = (cardArray) => {\n                const selectOddValues = cardArray.filter((a, i) => i % 2 === 1);\n                const selectEvenValues = cardArray.filter(\n                    (a, i) => i % 2 === 0\n                );\n                let arr1;\n                let arr2;\n                if (cardArray.length % 2 === 1) {\n                    arr1 = selectOddValues.map((e) => e * 2);\n                    arr2 = selectEvenValues;\n                } else {\n                    arr1 = selectEvenValues.map((e) => e * 2);\n                    arr2 = selectOddValues;\n                }\n                return { arr1, arr2 };\n            };\n\n            const isValidCC = (cardNumber) => {\n                const cardArray = cardNumber\n                    .toString()\n                    .split('')\n                    .map((e) => parseInt(e));\n                validlen(cardArray);\n                const splitArr = arrSplit(cardArray);\n                const checksum =\n                    sumArrDigits(splitArr.arr1).reduce((a, c) => a + c) +\n                    splitArr.arr2.reduce((a, c) => a + c);\n\n                if (checksum % 10 === 0) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            const validate = (cardNumber) => isValidCC(cardNumber);\n\n            return validate(value.replace(/[^0-9]/g, ''));\n        };\n    },\n});\n\n// Credit card validto validation (requires mm/yyyy mask)\nv8n.extend({\n    validTo(dateStartLimit, dateEndLimit) {\n        return _.partial(\n            function (dSL, dEL, v) {\n                var validate = () => {\n                    var dateType = /\\//.test(v) ? 'pt' : 'en',\n                        regexp =\n                            dateType === 'pt'\n                                ? /^((?<d>\\d{2})\\/)?(?<m>\\d{2})\\/(?<y>\\d{4})$/\n                                : /^(?<y>\\d{4})-(?<m>\\d{2})(-(?<d>\\d{2}))?$/,\n                        matches = v.match(regexp);\n\n                    if (!matches) {\n                        return false;\n                    }\n\n                    var d = matches.groups['d'] || '31',\n                        m = matches.groups['m'],\n                        y = matches.groups['y'],\n                        cD = new Date(),\n                        iD = new Date(y, parseInt(m, 10) - 1, d, 12);\n\n                    cD.setHours(0);\n                    cD.setMinutes(0);\n                    cD.setSeconds(0);\n                    cD.setMilliseconds(0);\n\n                    if (parseInt(d, 10) < 1 || parseInt(d, 10) > 31) {\n                        return false;\n                    }\n\n                    if (parseInt(m, 10) < 1 || parseInt(m, 10) > 12) {\n                        return false;\n                    }\n\n                    if (dSL || dEL) {\n                        if (dSL) {\n                            dSL =\n                                dSL === true\n                                    ? cD\n                                    : new Date(\n                                        dSL[0],\n                                        (dSL[1] || 0) - 1,\n                                        dSL[2] || 1,\n                                        dSL[3] || 0,\n                                        dSL[4] || 0,\n                                        dSL[5] || 0\n                                    );\n\n                            if (iD < dSL) {\n                                return false;\n                            }\n                        }\n\n                        if (dEL) {\n                            dEL = new Date(\n                                dEL[0],\n                                (dEL[1] || 12) - 1,\n                                dEL[2] || 31,\n                                dSL[3] || 23,\n                                dSL[4] || 59,\n                                dSL[5] || 59\n                            );\n\n                            if (iD > dEL) {\n                                return false;\n                            }\n                        }\n                    }\n\n                    return true;\n                };\n\n                return validate();\n            },\n            dateStartLimit,\n            dateEndLimit\n        );\n    },\n});\n\n// Renavam validation - [Reference](https://github.com/eliseuborges/Renavam/blob/master/Renavam.js)\nv8n.extend({\n    renavam(expected) {\n        return (value) => {\n            var validate = function (renavam) {\n                if (!renavam || typeof renavam !== 'string') {\n                    return false;\n                }\n\n                renavam = renavam.padStart(11, '0');\n\n                if (!renavam.match('^[0-9]{11}$')) {\n                    return false;\n                }\n\n                var renavamSemDigito = renavam.substring(0, 10);\n                var renavamReversoSemDigito = renavamSemDigito\n                    .split('')\n                    .reverse()\n                    .join('');\n\n                var soma = 0;\n                var multiplicador = 2;\n                for (var i = 0; i < 10; i++) {\n                    var algarismo = renavamReversoSemDigito.substring(i, i + 1);\n                    soma += algarismo * multiplicador;\n\n                    if (multiplicador >= 9) {\n                        multiplicador = 2;\n                    } else {\n                        multiplicador++;\n                    }\n                }\n\n                var mod11 = soma % 11;\n                var ultimoDigitoCalculado = 11 - mod11;\n                ultimoDigitoCalculado =\n                    ultimoDigitoCalculado >= 10 ? 0 : ultimoDigitoCalculado;\n                var digitoRealInformado = parseInt(\n                    renavam.substring(renavam.length - 1, renavam.length)\n                );\n                if (ultimoDigitoCalculado === digitoRealInformado) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value.replace(/[^0-9]/g, ''));\n        };\n    },\n});\n\n// Phone validation (DDD+Phone, does not work with DDI)\nv8n.extend({\n    brphone(expected) {\n        return (value) => {\n            var validate = function (phone) {\n                if (!phone || typeof phone !== 'string') {\n                    return false;\n                }\n\n                if (/^[0-9]{10,11}$/.test(phone)) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            return validate(value.replace(/[^0-9]/g, ''));\n        };\n    },\n});\n\nexport default v8n;\n"],"names":["v8n","extend","regex","testRule","replaceRule","_","partial","tr","rr","v","validate","toString","test","isArray","str","replace","date","expected","value","r","s","vf","split","reverse","d","Date","join","d2","setDate","getDate","parseInt","email","stringAlpha","shortname","normalize","fullname","fullnameStrict","passwordMatch","attrs","data","a","f","f1","pop","validateCPF","mod11","num","not","x","isEqual","b","mergeDigits","num1","num2","getTwoLastDigits","cpf","getCpfToCheckInArray","substr","generateArray","length","Array","from","k","isIn","list","val","findIndex","isSameDigitsCPF","cpfFull","map","generateStringSequence","times","char","repeat","toSumOfMultiplication","total","result","i","getSumOfMultiplication","reduce","getValidationDigit","getDigit","isValidCPF","firstDigit","secondDigit","concat","CPF","validateCNPJ","mod14","isSameDigitsCNPJ","cnpjFull","isValidCNPJ","cnpj","tamanho","numeros","digitos","soma","pos","resultado","substring","charAt","CNPJ","cpfcnpj","creditcard","sumArrDigits","array","e","validlen","arr","arrSplit","cardArray","selectOddValues","filter","selectEvenValues","arr1","arr2","isValidCC","cardNumber","splitArr","checksum","c","validTo","dateStartLimit","dateEndLimit","dSL","dEL","dateType","regexp","matches","match","groups","m","y","cD","iD","setHours","setMinutes","setSeconds","setMilliseconds","renavam","padStart","renavamSemDigito","renavamReversoSemDigito","multiplicador","algarismo","ultimoDigitoCalculado","digitoRealInformado","brphone","phone"],"mappings":"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"}